/// <reference types="node" />
import Telegraf from 'telegraf';
import type { ApiResponse } from 'typegram';
import type { TelegramServerConfig } from '../telegramServer';
import { TelegramServer } from '../telegramServer';
export declare const delay: typeof import("timers/promises").setTimeout;
export declare function getServerAndClient(token: string, serverOptions?: Partial<TelegramServerConfig>): Promise<{
    client: import("../modules/telegramClient").TelegramClient;
    server: TelegramServer;
}>;
export declare function getServerAndBot(token: string): Promise<{
    server: TelegramServer;
    bot: Telegraf<import("telegraf").Context>;
}>;
export declare function getHookOptions(token: string): {
    hookedBotOptions: {
        polling: boolean;
        webHook: {
            host: string;
            port: number;
        };
    };
    hookUrl: string;
};
export declare function assertEventuallyTrue(timeoutDuration: number, message: string, func: () => boolean): Promise<void>;
export declare function ensureUpdates<T>(updates: ApiResponse<T>): void;
